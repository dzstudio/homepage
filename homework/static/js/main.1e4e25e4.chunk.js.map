{"version":3,"sources":["store/reducers/index.js","store/reducers/agentReducer.js","store/actions/actionTypes.js","store/actions/agentActions.js","configs/common.js","components/header.js","components/footer.js","pages/base/home/home.js","pages/base/login/loginform.js","pages/base/login/login.js","pages/base/dashboard/dashboard.js","pages/base/agents/agentFilter.js","pages/base/agents/agentItem.js","pages/base/agents/agentSummary.js","pages/base/agents/agents.js","pages/base/mycruise/mycruise.js","pages/base/help/help.js","pages/base/profile/profile.js","pages/base/notfound.js","configs/router.config.js","pages/app.js","serviceWorker.js","index.js"],"names":["rootReducers","combineReducers","routing","agents","state","arguments","length","undefined","action","agentId","name","names","type","items","agentList","map","agent","id","resNames","item","trim","filter","resName","res","concat","Object","toConsumableArray","resources","Array","from","Set","objectSpread","agentResourceAdd","agentResourceDel","checkLogin","nextState","replace","token","sessionStorage","getItem","Header","props","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","setState","navigateTo","key","userToken","nextProps","react_default","a","createElement","className","react_router","to","row","col","span","react_router_dom","popconfirm","onConfirm","onLogout","placement","title","icon","style","color","es_button","menu","selectedKeys","selectedTab","onClick","Item","Component","footer","Home","currentPath","location","pathname","isLogin","removeItem","_this2","header_Header","exact","path","component","base","LoginForm","handleSubmit","preventDefault","form","validateFields","err","values","username","setItem","loading","setTimeout","loginSuccess","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","spin","spinning","es_form","onSubmit","validateStatus","help","rules","required","message","input","prefix","placeholder","htmlType","disabled","keys","some","field","Login","WrappedLoginForm","Form","create","Dashboard","agentFilter","AgentItem","handleVisibleChange","showAddResView","hideAddResView","resourcesName","onResourcesNameChange","target","value","confirmAddRes","_this$props","onAddRes","split","_this$props2","onDelRes","status","size","email","ip","popover","content","allowClear","onChange","marginTop","paddingLeft","visible","onVisibleChange","trigger","ghost","agentSummary","_ref","summary","building","idle","history","index","connect","dispatch","onAddAgentRes","agentActions","onDelAgentRes","agentItem_AgentItem","MyCruise","Help","Profile","NotFound","router_config","store","applyMiddleware","thunkMiddleware","createStore","App","es","Boolean","window","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e4e25e4.chunk.js","sourcesContent":["import { routerReducer as routing } from 'react-router-redux'\r\nimport { combineReducers } from 'redux'\r\nimport agentReducer from './agentReducer'\r\n\r\nconst rootReducers = combineReducers({\r\n    routing,\r\n    agents: agentReducer,\r\n})\r\n\r\nexport default rootReducers","import * as ActionTypes from '../actions/actionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n    const { agentId, name, names } = action\r\n    switch (action.type) {\r\n        case ActionTypes.AGENT_RES_ADD:\r\n            // The add resource reducer.\r\n            const items = state.agentList.map((agent) => {\r\n                if (agent.id === agentId) {\r\n                    // Trim spaces for each resource name.\r\n                    let resNames = names.map((item) => {\r\n                        return item.trim()\r\n                    })\r\n                    // Filter out the empty resource name.\r\n                    resNames = resNames.filter((resName) => {\r\n                        return resName.length > 0\r\n                    })\r\n                    // Merge names and return a new resource names array.\r\n                    let res = [...agent.resources, ...resNames]\r\n                    res =  Array.from(new Set(res))\r\n                    return {...agent, resources : res}\r\n                } else {\r\n                    return agent\r\n                }\r\n            })\r\n            return {...state, agentList : items}\r\n        case ActionTypes.AGENT_RES_DEL:\r\n            // The delete resource reducer.\r\n            let agentList = state.agentList.map((agent) => {\r\n                if (agent.id === agentId) {\r\n                    // Filter out the target resource.\r\n                    let res = agent.resources.filter((resName) => {\r\n                        return resName !== name\r\n                    })\r\n                    // Create a new state object with filtered resources.\r\n                    return {...agent, resources : res}\r\n                } else {\r\n                    return agent\r\n                }\r\n            })\r\n            return {...state, agentList : agentList}\r\n        default:\r\n            return state\r\n    }\r\n}","// The agent actions type defination.\r\n\r\nexport const AGENT_RES_ADD = 'agent/resource/add'\r\nexport const AGENT_RES_DEL = 'agent/resource/delete'","import { AGENT_RES_ADD, AGENT_RES_DEL } from './actionTypes'\r\n\r\n// The agent actions constructor.\r\nexport const agentResourceAdd = (agentId, names) => ({\r\n    type: AGENT_RES_ADD,\r\n    agentId: agentId,\r\n    names: names\r\n})\r\n\r\nexport const agentResourceDel = (agentId, name) => ({\r\n    type: AGENT_RES_DEL,\r\n    agentId: agentId,\r\n    name: name\r\n})\r\n","/*\r\n * 全局公用函数库\r\n */\r\n\r\n export const checkLogin = (nextState, replace) => {\r\n    const token = sessionStorage.getItem('login_token')\r\n    if (token && typeof token == 'string') {\r\n        return true\r\n    }\r\n    \r\n    return false\r\n }","import React, { Component } from 'react'\r\nimport { Menu, Icon, Row, Col, Button, Popconfirm } from 'antd'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Header extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n        const token = sessionStorage.getItem('login_token')\r\n        this.state = {\r\n            userToken: token,\r\n            navigateTo: ''\r\n        }        \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({navigateTo: ''})\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({ navigateTo: e.key})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <header id=\"navbar\" className=\"boxed\">\r\n                {\r\n                    (this.state.navigateTo.length > 0) ? <Redirect to={this.state.navigateTo} /> : ''\r\n                }\r\n                <Row className=\"row text-right\">\r\n                    <Col id=\"navbarLogo\" span={6}>\r\n                        <label>Cruise</label>\r\n                    </Col>\r\n                    <Col span={18}>\r\n                        <Row className=\"row text-right\">\r\n                            <Col>\r\n                                <label>Signed in as <Link to=\"/profile\">{ this.state.userToken }</Link></label>\r\n                                <Popconfirm onConfirm={this.props.onLogout} placement=\"bottomRight\" title=\"Are you sure to logout？\" icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}>\r\n                                    <Button  type=\"link\"><Icon type=\"caret-right\" style={{ color: '#1890ff' }} />Sign out</Button>\r\n                                </Popconfirm>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row text-right\">\r\n                            <Col>\r\n                                <Menu selectedKeys={[this.props.selectedTab]} onClick={this.handleClick}>\r\n                                    <Menu.Item key=\"/dashboard\"><Icon type=\"home\" />DASHBOARD</Menu.Item>\r\n                                    <Menu.Item key=\"/mycruise\"><Icon type=\"schedule\" />MY CRUISE</Menu.Item>\r\n                                    <Menu.Item key=\"/agents\"><Icon type=\"solution\" />AGENTS</Menu.Item>\r\n                                    <Menu.Item key=\"/help\"><Icon type=\"question-circle\" />HELP</Menu.Item>\r\n                                </Menu>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </header>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default () =>(\r\n    <div id=\"pageFooter\">\r\n        <label>Front end homework. Copyright 张黎 2019-5-11. React, Redux, Antd inside.</label>\r\n    </div>\r\n)","import React, { Component } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { checkLogin } from '../../../configs/common'\r\nimport Header from '../../../components/header';\r\nimport Footer from '../../../components/footer';\r\nimport * as base from '../'\r\n\r\nexport default class Home extends Component {\r\n    constructor(props, context) {\r\n        super(props, context)\r\n\r\n        // User current path as key to specify current highlight tab.\r\n        const currentPath = this.props.location.pathname\r\n        this.state = {\r\n            isLogin : checkLogin(),\r\n            selectedTab : (currentPath === '/' ? '/agents' : currentPath)\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // Update current highlight tab key.\r\n        const currentPath =nextProps.location.pathname\r\n        this.setState({selectedTab : (currentPath === '/' ? '/agents' : currentPath)})\r\n    }\r\n\r\n    onLogout() {\r\n        // Clear login_token the only login state identifier.\r\n        sessionStorage.removeItem('login_token')\r\n        this.setState({ isLogin : false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header selectedTab={ this.state.selectedTab } onLogout={ () => { this.onLogout() } } ></Header>\r\n                <div id=\"mainContent\">\r\n                {\r\n                    this.state.isLogin ? \r\n                    <Switch>\r\n                    <Route exact path=\"/\" component={base.agents} />\r\n                    <Route path=\"/agents\" component={base.agents} />\r\n                    <Route path=\"/dashboard\" component={base.dashboard} />\r\n                    <Route path=\"/mycruise\" component={base.mycruise} />\r\n                    <Route path=\"/help\" component={base.help} />\r\n                    <Route path=\"/profile\" component={base.profile} />\r\n                    </Switch> : <Redirect to=\"/login\" />\r\n                }\r\n                </div>\r\n                <Footer></Footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Spin, Form, Input, Icon, Button } from 'antd'\r\nimport { Redirect } from 'react-router-dom';\r\n    \r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nexport default class LoginForm extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n        this.state = {\r\n          loading: false,\r\n          loginSuccess: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Do form validation to disable the login btn when page loaded.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                const username = values.username\r\n                // Use username as login token and store in memory.\r\n                sessionStorage.setItem('login_token', username)\r\n                \r\n                // Show loading spin to improve user experience.\r\n                this.setState({ loading : true })\r\n                setTimeout(() => {\r\n                    this.setState({ loginSuccess : true }) \r\n                }, 1200);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched, } = this.props.form;\r\n        \r\n        // Only show error after a field is touched.\r\n        const usernameError = isFieldTouched('username') && getFieldError('username');\r\n        const passwordError = isFieldTouched('password') && getFieldError('password');\r\n      \r\n        return (\r\n            <div id=\"loginPage\">\r\n                <div className=\"login-header\">\r\n                    <label>Front End Homework - 张黎 0510</label>\r\n                </div>\r\n                {\r\n                    // When login success, redirect to home page.\r\n                    (this.state.loginSuccess) ? <Redirect to=\"/\" /> : ''\r\n                }\r\n                <Spin spinning={this.state.loading}>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item validateStatus={usernameError ? 'error' : ''} help={usernameError || ''} >\r\n                            {getFieldDecorator('username', {\r\n                                rules: [{ required: true, message: 'Please input your username!' }],\r\n                            })(\r\n                                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{required: true, message: 'Please input your password!'}]\r\n                            })(\r\n                                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())} >Log in</Button>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <label>Tips: Mock data, you can input any word.</label>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Spin>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport LoginForm from './loginform';\r\nimport '../../../styles/login.css';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const WrappedLoginForm = Form.create({ name: 'login_form' })(LoginForm);\r\n        return (\r\n            <WrappedLoginForm />\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Dashboard extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"to-be-done\">\r\n                <p>Dashboard</p>\r\n                <p>Coming soon~</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport default () => (\r\n    <div id=\"agentsFilter\">\r\n        <label>Agents</label>\r\n        <Button>All</Button>\r\n        <Button type=\"primary\">Physical</Button>\r\n        <Button>Virtual</Button>\r\n    </div>\r\n)","import React, { Component } from 'react'\r\nimport { Button, Icon, Popover, Popconfirm, Input } from 'antd'\r\n\r\nexport default class AgentItem extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n        this.state = {\r\n            showAddResView: false,\r\n            resourcesName: ''\r\n        }        \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({navigateTo: ''})\r\n    }\r\n    \r\n    // The antd Popover component state handler.\r\n    handleVisibleChange = (showAddResView) => {\r\n        this.setState({ showAddResView });\r\n    }\r\n    \r\n    // Hide add resource popover.\r\n    hideAddResView = () => {\r\n        this.setState({\r\n            showAddResView: false,\r\n            resourcesName: ''\r\n        });\r\n    }\r\n    \r\n    // Sync the resource input value to state.\r\n    onResourcesNameChange = (e) => {\r\n        this.setState({\r\n            resourcesName: e.target.value\r\n        });\r\n    }\r\n    \r\n    // Create resources through onAddRes reducer.\r\n    confirmAddRes = () => {\r\n        const {agent, onAddRes} = this.props\r\n        let resNames = this.state.resourcesName.trim().split(',')\r\n        if (resNames.length > 0) {\r\n            onAddRes(agent.id, resNames)\r\n            this.hideAddResView()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {agent, onDelRes} = this.props\r\n        return (\r\n            <div className={agent.status==='building' ? 'building agent-item' : 'idle agent-item'}>\r\n                <div className=\"agent-thumb\">\r\n                    <div></div>\r\n                </div>\r\n                <div className=\"agent-operation\">\r\n                {\r\n                    agent.status !== 'idle' ? '' :\r\n                    <Button icon=\"stop\" type=\"link\" size=\"small\">Deny</Button>\r\n                }\r\n                </div>\r\n                <div className=\"agent-content\">\r\n                    <div className=\"agent-content-desc\">\r\n                        <label className=\"agent-email\">{agent.email}</label>\r\n                        <label className=\"agent-info\">| {agent.status} | {agent.ip} | {agent.target}</label>\r\n                    </div>\r\n                    <div>\r\n                        <Popover\r\n                            content={\r\n                                <div>\r\n                                    <Input placeholder=\"Resources name\" allowClear value={this.state.resourcesName} onChange={this.onResourcesNameChange} />\r\n                                    <Button type=\"link\" onClick={this.confirmAddRes} style={{marginTop:10, paddingLeft:0}}>Add Resources</Button>\r\n                                    <Button type=\"link\" onClick={this.hideAddResView}>Close</Button>\r\n                                </div>\r\n                            }\r\n                            title=\"(separate multiple resources name with commas)\"\r\n                            visible={this.state.showAddResView}\r\n                            onVisibleChange={this.handleVisibleChange}\r\n                            placement=\"bottomLeft\"\r\n                            trigger=\"click\">\r\n                            <Button type=\"primary\" ghost icon=\"plus-circle\" size=\"small\">Specify Resources</Button>\r\n                        </Popover>\r\n                        <label className=\"agent-res-title\">| Resources:</label>\r\n                        {\r\n                            agent.resources.map((res) => (\r\n                                <Popconfirm key={res} onConfirm={() => {onDelRes(agent.id, res)}} title=\"Are you sure to delete this resource?\" icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}>\r\n                                    <Button className=\"agent-res\" type=\"link\" size=\"small\">{res}<Icon type=\"close-circle\" /></Button>\r\n                                </Popconfirm>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default ({summary}) => (    \r\n    <div className=\"agent-summary\">\r\n        <label className=\"agent-summary-title\">Summary</label>\r\n        <div className=\"agent-summary-content\">\r\n            <p><label>building</label><span>{summary.building}</span></p>\r\n            <p><label>idle</label><span>{summary.idle}</span></p>\r\n        </div>\r\n        <label className=\"agent-summary-title\">History</label>\r\n        <div className=\"agent-summary-content\">\r\n        {\r\n            summary.history.map((item, index) => (\r\n                <p key={index}><label>{item}</label></p>\r\n            ))\r\n        }\r\n        </div>\r\n    </div>\r\n)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col } from 'antd'\r\n\r\nimport { agentActions } from '../../../store'\r\nimport AgentFilter from './agentFilter'\r\nimport AgentItem from './agentItem'\r\nimport AgentSummary from './agentSummary'\r\n\r\nimport '../../../styles/agents.css'\r\n\r\nconst Agents = ({agents, summary, onAddAgentRes, onDelAgentRes}) => {\r\n    return (\r\n        <div>\r\n            <AgentFilter />\r\n            <Row id=\"agentContent\" className=\"row\">\r\n                <Col id=\"agentList\" span={18}>\r\n                {\r\n                    agents.map((item) => (\r\n                        <AgentItem key={item.id} agent={item} onAddRes={onAddAgentRes} onDelRes={onDelAgentRes} />\r\n                    ))\r\n                }\r\n                </Col>\r\n                <Col id=\"agentSummary\" span={6}>\r\n                    <AgentSummary summary={summary} />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Mapping root store state to agent component.\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n        agents: state.agents.agentList,\r\n        summary: state.agents.summary\r\n    }\r\n}\r\n\r\n// Mapping root store reducer to agent component.\r\nfunction mapDispatchToProps(dispatch, props) {\r\n    return {\r\n        onAddAgentRes: (agentId, names) => {\r\n          dispatch(agentActions.agentResourceAdd(agentId, names));\r\n        },\r\n        onDelAgentRes: (agentId, name) => {\r\n          dispatch(agentActions.agentResourceDel(agentId, name));\r\n        }\r\n    }\r\n}\r\n\r\n// Use the connect method provided by react-redux to bind state and reducer automatically.\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Agents)","import React, { Component } from 'react'\r\n\r\nexport default class MyCruise extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"to-be-done\">\r\n                <p>My Cruise</p>\r\n                <p>Coming soon~</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Help extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"to-be-done\">\r\n                <p>Help</p>\r\n                <p>Coming soon~</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"to-be-done\">\r\n                <p>Profile</p>\r\n                <p>Coming soon~</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../../styles/notfound.css';\r\n\r\nexport default class NotFound extends Component {\r\n    constructor(props, context) {\r\n        super(props)\r\n    }\r\n    \r\n    // Render 404 not found page with a back to home button.\r\n    render() {\r\n        return (\r\n            <div className=\"notfound-desc\">Opps - The page you are looking for is not here~ <br/><Link to=\"/\">Back to Home</Link></div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport * as base from '../pages/base'\r\n\r\n// The root route for whole app.\r\nexport default () => (\r\n    <Router>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={base.home} />\r\n            <Route path=\"/(agents|dashboard|mycruise|help|profile)/\" component={base.home} />\r\n            <Route path=\"/login\" component={base.login} />\r\n            <Route component={base.notfound} />\r\n        </Switch>\r\n    </Router>\r\n)","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport { rootReducers } from '../store'\nimport Routes from '../configs/router.config'\n\nconst initValues = {\n  agents: {\n    summary: {\n      building: 2,\n      idle: 2,\n      history: [\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\",\n        \"bjstdmngbgr02/Acceptance_test\"\n      ]\n    },\n    agentList: [\n      {\n        id: 1,\n        email: 'bjstmngbgr02.thoughtworks.com',\n        status: 'idle',\n        ip: '192.168.1.2',\n        resources: ['firefox3', 'core-duo', 'chrome', 'mysql'],\n        target: '/var/lib/cruise-agent'\n      },\n      {\n        id: 2,\n        email: 'bjstmngbgr03.thoughtworks.com',\n        status: 'building',\n        ip: '192.168.1.2',\n        resources: ['firefox3', 'mysql', 'core-duo'],\n        target: '/var/lib/cruise-agent'\n      },\n      {\n        id: 3,\n        email: 'bjstmngbgr04.thoughtworks.com',\n        status: 'building',\n        ip: '192.168.1.3',\n        resources: ['firefox3', 'mysql', 'core-duo'],\n        target: '/var/lib/cruise-agent'\n      },\n      {\n        id: 4,\n        email: 'bjstmngbgr05.thoughtworks.com',\n        status: 'idle',\n        ip: '192.168.1.4',\n        resources: [],\n        target: '/var/lib/cruise-agent'\n      }\n    ]\n  }\n}\n\n// 创建redux数据store\nconst store = applyMiddleware(\n  thunkMiddleware // 引入redux-thunk中间件以支持异步action\n)(createStore)(rootReducers, initValues)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"antd/dist/antd.css\";\nimport './styles/global.css';\nimport App from './pages/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}